-- CREATE
-- 테이블 생성

CREATE TABLE MEMBER(
	MEMBER_NO NUMBER,
	MEMBER_ID VARCHAR2(20),
	MEMBER_PWS VARCHAR2(20),
	MEMBER_NAME VARCHAR2(15)
);
SELECT * FROM MEMBER;
DROP TABLE MEMBER;


-- 테이블 사전
-- 현재 계정의 테이블 목록
SELECT * FROM USER_TABLE;
-- 컬럼들의 목록
SELECT * FROM USER_TAB_COLUMNS WHERE TABLE_NAME = 'MEMBER';


-- 제약조건
-- NOT NULL
-- '널 값 허용하지 않겠다.'
-- 반드시 값을 기록해야 하는 컬럼에 해당 제약조건을 등록
-- INSERT/UPDATE/DELETE 시에 NULL값을 허용하지 않도록 등록.

CREATE TABLE USER_NOCONS(
	USER_NO NUMBER,
	USER_ID VARCHAR2(20),
	USER_PWD VARCHAR2(30),
	USER_NAME VARCHAR(15)
);
SELECT * FROM USER_NOCONS;


-- 테이블에 값 추가하기
-- INSERT => DML
INSERT INTO USER_NOCONS VALUES(1, 'USER01', 'PASS01','이창진');
SELECT * FROM USER_NOCONS;
INSERT INTO USER_NOCONS VALUES(2, NULL, NULL, NULL);

CREATE TABLE USER_NOT_NULL(
	USER_NO NUMBER NOT NULL,
	USER_ID VARCHAR2(20) NOT NULL,
	USER_PWD VARCHAR2(30) NOT NULL,
	USER_NAME VARCHAR2(15)
);
SELECT * FROM USER_NOT_NULL;

INSERT INTO USER_NOT_NULL VALUES(1,'USER01','PASS01','이창진');

-- SQL Error [1400] [23000]: ORA-01400: NULL을 ("MULTI"."USER_NOT_NULL"."USER_ID") 안에 삽입할 수 없습니다
INSERT INTO USER_NOT_NULL VALUES(1,NULL,NULL,NULL);

-- NAME은 NOT NULL 제약조건을 등록하지 않았기에 NULL 값이 잘 들어 간다.
INSERT INTO USER_NOT_NULL VALUES(2,'USER02','PASS02',NULL);



--  UNIQUE --
-- 중복을 허용하지 않는 제약조건
-- 컬럼에 값을 입력/ 수정 할때 중복 확인하여
-- 만약 값이 있을 경우 값을 수정 및 추가를 못하게 하는 제약조건

INSERT INTO USER_NOCONS VALUES(1,'USER01','PASS01','권장현');
SELECT * FROM USER_NOCONS;


CREATE TABLE USER_UNIQUE(
	USER_NO NUMBER,
	USER_ID VARCHAR2(20) UNIQUE, -- 컬럼레벨 제약조건
	USER_PWD VARCHAR2(30),
	USER_NAME VARCHAR2(15)
);
SELECT * FROM USER_UNIQUE;

INSERT INTO USER_UNIQUE
VALUES(1, 'USER01','PASS01','권장현');

SELECT * FROM USER_UNIQUE;

-- ID만 다르게 해서 INSERT를 실행
-- 에러 없이 추가
INSERT INTO USER_UNIQUE
VALUES(1, 'USER02','PASS01','권장현');

SELECT *
FROM USER_CONSTRAINTS C1
JOIN USER_CONS_COLUMNS C2 ON (C1.CONSTRAINT_NAME = C2.CONSTRAINT_NAME)
WHERE C1.TABLE_NAME = 'USER_UNIQUE';

SELECT *
FROM USER_CONSTRAINTS C1
JOIN USER_CONS_COLUMNS C2 ON (C1.CONSTRAINT_NAME = C2.CONSTRAINT_NAME)
WHERE C1.TABLE_NAME = 'USER_NOT_NULL';



-- CONS TYPE
-- P: PRIMARY KEY
-- C: CHECK, NOT NULL
-- U: UNIQUE
-- R: FOREIGN KEY(REFERENCE)

CREATE TABLE USER_UNIQUE2(
	USER_NO NUMBER,
--	USER_ID VARCHAR2(20) UNIQUE, -- 컬럼레벨
	USER_ID VARCHAR2(20),
	USER_PWD VARCHAR2(30),
	USER_NAME VARCHAR2(15),
	UNIQUE(USER_ID) -- 컬럼이 모두 작성 된 후에 별도로 작성하는 제약조건을 테이블 레벨 제약 조건이라 한다.
);
INSERT INTO USER_UNIQUE2 VALUES(1, 'USER01','PASS01','권장현');

-- SQL Error [1] [23000]: ORA-00001: 무결성 제약 조건(MULTI.SYS_C0023225)에 위배됩니다
INSERT INTO USER_UNIQUE2 VALUES(1, 'USER01','PASS01','권장현');

SELECT * FROM USER_UNIQUE2;



-- UNIQUE 제약조건을 여러개 컬럼에 적용하기
-- 두 개 이상의 컬럼을 하나의 제약조건으로 묶자
-- 테이블 레벨에서 선언
-- D1 10
-- D1 20
-- D2 10
-- D2 20
-- D3 10
-- D3 20

CREATE TABLE USER_UNIQUE3(
	USER_NO NUMBER,
	USER_ID VARCHAR2(20),
	USER_PWD VARCHAR2(30),
	USER_NAME VARCHAR2(15),
	UNIQUE(USER_NO, USER_ID)
	-- 두 개 이상의 컬럼값을 중복되지 않게 설정하기
); 
SELECT * FROM USER_UNIQUE3;

INSERT INTO USER_UNIQUE3 VALUES(1,'USER01','PASS01','권장현');
INSERT INTO USER_UNIQUE3 VALUES(1,'USER02','PASS02','김장현');

INSERT INTO USER_UNIQUE3 VALUES(2,'USER01','PASS03','박장현');


-- 제약 조건에 이름 설정
CREATE TABLE CONS_NAME(
	TEST_DATA1 NUMBER CONSTRAINT NN_DATA1 NOT NULL,
	TEST_DATA2 VARCHAR2(30) CONSTRAINT UN_DATA1 UNIQUE,
	TEST_DATA3 VARCHAR2(30),
	CONSTRAINT UK_DATA3 UNIQUE(TEST_DATA3)
);

SELECT * FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'CONS_NAME';

SELECT * FROM CONS_NAME;

-- CHECK --
-- 컬럼에 값을 기록할 때 지정한 값 이외에는 값이
-- 저장되지 않도록 범위를 제한하는 조건
CREATE TABLE USER_CHECK(
	USER_NO NUMBER,
	USER_ID VARCHAR2(20),
	USER_PWD VARCHAR2(30),
	USER_NAME VARCHAR(15),
	GENDER CHAR(3) CHECK(GENDER IN ('남','여'))
);

SELECT * FROM USER_CHECK;

INSERT INTO USER_CHECK VALUES(1, 'USER01','PASS01','홍길동','여');

-- SQL Error [12899] [72000]: ORA-12899: "MULTI"."USER_CHECK"."GENDER" 열에 대한 값이 너무 큼(실제: 6, 최대값: 3)
INSERT INTO USER_CHECK VALUES(2, 'USER02','PASS02','김길동','여성');

-- SQL Error [2290] [23000]: ORA-02290: 체크 제약조건(MULTI.SYS_C0023233)이 위배되었습니다
INSERT INTO USER_CHECK VALUES(2, 'USER02','PASS02','김길동','F');
INSERT INTO USER_CHECK VALUES(2, 'USER02','PASS02','김길동','김');

-- INSERT 성공
INSERT INTO USER_CHECK VALUES(2, 'USER02','PASS02','김길동','남');

-- CHECK 조약조건에 부등호 처리
CREATE TABLE USER_CHECK2(
	TEST_DATA NUMBER,
	CONSTRAINT CK_TEST_DATA CHECK(TEST_DATA > 0)
);

INSERT INTO USER_CHECK2 VALUES(10);

SELECT * FROM USER_CHECK2;

-- SQL Error [2290] [23000]: ORA-02290: 체크 제약조건(MULTI.CK_TEST_DATA)이 위배되었습니다
INSERT INTO USER_CHECK2 VALUES(-10);

